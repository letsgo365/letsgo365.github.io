/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./node_modules/events/events.js?");

/***/ }),

/***/ "./src/client/dom/attr.js":
/*!********************************!*\
  !*** ./src/client/dom/attr.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass AttrApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Attr = this.window.Attr || {};\n        this.attrProto = this.Attr.prototype || {};\n        this.value = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.attrProto,\n            'value'\n        );\n        this.name = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.attrProto,\n            'name'\n        );\n        this.getNamedItem = this.attrProto.getNamedItem || null;\n        this.setNamedItem = this.attrProto.setNamedItem || null;\n        this.removeNamedItem = this.attrProto.removeNamedItem || null;\n        this.getNamedItemNS = this.attrProto.getNamedItemNS || null;\n        this.setNamedItemNS = this.attrProto.setNamedItemNS || null;\n        this.removeNamedItemNS = this.attrProto.removeNamedItemNS || null;\n        this.item = this.attrProto.item || null;\n    }\n    overrideNameValue() {\n        this.ctx.overrideDescriptor(this.attrProto, 'name', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('name', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n\n        this.ctx.overrideDescriptor(this.attrProto, 'value', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    {\n                        name: this.name.get.call(that),\n                        value: target.call(that),\n                    },\n                    target,\n                    that\n                );\n                this.emit('getValue', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { name: this.name.get.call(that), value: val },\n                    target,\n                    that\n                );\n                this.emit('setValue', event);\n\n                if (event.intercepted) return event.returnValue;\n                event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n    overrideItemMethods() {\n        this.ctx.override(\n            this.attrProto,\n            'getNamedItem',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name }, target, that);\n                this.emit('getNamedItem', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(\n            this.attrProto,\n            'setNamedItem',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [name, value] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name, value }, target, that);\n                this.emit('setNamedItem', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.name,\n                    event.data.value\n                );\n            }\n        );\n        this.ctx.override(\n            this.attrProto,\n            'removeNamedItem',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name }, target, that);\n                this.emit('removeNamedItem', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(this.attrProto, 'item', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [index] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ index }, target, that);\n            this.emit('item', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.name);\n        });\n        this.ctx.override(\n            this.attrProto,\n            'getNamedItemNS',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [namespace, localName] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { namespace, localName },\n                    target,\n                    that\n                );\n                this.emit('getNamedItemNS', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.namespace,\n                    event.data.localName\n                );\n            }\n        );\n        this.ctx.override(\n            this.attrProto,\n            'setNamedItemNS',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [attr] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ attr }, target, that);\n                this.emit('setNamedItemNS', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(\n            this.attrProto,\n            'removeNamedItemNS',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [namespace, localName] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { namespace, localName },\n                    target,\n                    that\n                );\n                this.emit('removeNamedItemNS', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.namespace,\n                    event.data.localName\n                );\n            }\n        );\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AttrApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/dom/attr.js?");

/***/ }),

/***/ "./src/client/dom/document.js":
/*!************************************!*\
  !*** ./src/client/dom/document.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass DocumentHook extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.document = this.window.document;\n        this.Document = this.window.Document || {};\n        this.DOMParser = this.window.DOMParser || {};\n        this.docProto = this.Document.prototype || {};\n        this.domProto = this.DOMParser.prototype || {};\n        this.title = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'title'\n        );\n        this.cookie = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'cookie'\n        );\n        this.referrer = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'referrer'\n        );\n        this.domain = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'domain'\n        );\n        this.documentURI = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'documentURI'\n        );\n        this.write = this.docProto.write;\n        this.writeln = this.docProto.writeln;\n        this.querySelector = this.docProto.querySelector;\n        this.querySelectorAll = this.docProto.querySelectorAll;\n        this.parseFromString = this.domProto.parseFromString;\n        this.URL = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.docProto,\n            'URL'\n        );\n    }\n    overrideParseFromString() {\n        this.ctx.override(\n            this.domProto,\n            'parseFromString',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [string, type] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ string, type }, target, that);\n                this.emit('parseFromString', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.string,\n                    event.data.type\n                );\n            }\n        );\n    }\n    overrideQuerySelector() {\n        this.ctx.override(\n            this.docProto,\n            'querySelector',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [selectors] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ selectors }, target, that);\n                this.emit('querySelector', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.selectors);\n            }\n        );\n    }\n    overrideDomain() {\n        this.ctx.overrideDescriptor(this.docProto, 'domain', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getDomain', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ value: val }, target, that);\n                this.emit('setDomain', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n    overrideReferrer() {\n        this.ctx.overrideDescriptor(this.docProto, 'referrer', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('referrer', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideCreateTreeWalker() {\n        this.ctx.override(\n            this.docProto,\n            'createTreeWalker',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [root, show = 0xffffffff, filter, expandEntityReferences] =\n                    args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { root, show, filter, expandEntityReferences },\n                    target,\n                    that\n                );\n                this.emit('createTreeWalker', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.root,\n                    event.data.show,\n                    event.data.filter,\n                    event.data.expandEntityReferences\n                );\n            }\n        );\n    }\n    overrideWrite() {\n        this.ctx.override(this.docProto, 'write', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [...html] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ html }, target, that);\n            this.emit('write', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.apply(event.that, event.data.html);\n        });\n        this.ctx.override(this.docProto, 'writeln', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [...html] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ html }, target, that);\n            this.emit('writeln', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.apply(event.that, event.data.html);\n        });\n    }\n    overrideDocumentURI() {\n        this.ctx.overrideDescriptor(this.docProto, 'documentURI', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('documentURI', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideURL() {\n        this.ctx.overrideDescriptor(this.docProto, 'URL', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('url', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideCookie() {\n        this.ctx.overrideDescriptor(this.docProto, 'cookie', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getCookie', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [value]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ value }, target, that);\n                this.emit('setCookie', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n    overrideTitle() {\n        this.ctx.overrideDescriptor(this.docProto, 'title', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getTitle', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [value]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ value }, target, that);\n                this.emit('setTitle', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DocumentHook);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/dom/document.js?");

/***/ }),

/***/ "./src/client/dom/element.js":
/*!***********************************!*\
  !*** ./src/client/dom/element.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass ElementApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Audio = this.window.Audio;\n        this.Element = this.window.Element;\n        this.elemProto = this.Element ? this.Element.prototype : {};\n        this.innerHTML = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.elemProto,\n            'innerHTML'\n        );\n        this.outerHTML = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.elemProto,\n            'outerHTML'\n        );\n        this.setAttribute = this.elemProto.setAttribute;\n        this.getAttribute = this.elemProto.getAttribute;\n        this.removeAttribute = this.elemProto.removeAttribute;\n        this.hasAttribute = this.elemProto.hasAttribute;\n        this.querySelector = this.elemProto.querySelector;\n        this.querySelectorAll = this.elemProto.querySelectorAll;\n        this.insertAdjacentHTML = this.elemProto.insertAdjacentHTML;\n        this.insertAdjacentText = this.elemProto.insertAdjacentText;\n    }\n    overrideQuerySelector() {\n        this.ctx.override(\n            this.elemProto,\n            'querySelector',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [selectors] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ selectors }, target, that);\n                this.emit('querySelector', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.selectors);\n            }\n        );\n    }\n    overrideAttribute() {\n        this.ctx.override(\n            this.elemProto,\n            'getAttribute',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name }, target, that);\n                this.emit('getAttribute', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(\n            this.elemProto,\n            'setAttribute',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [name, value] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name, value }, target, that);\n                this.emit('setAttribute', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.name,\n                    event.data.value\n                );\n            }\n        );\n        this.ctx.override(\n            this.elemProto,\n            'hasAttribute',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name }, target, that);\n                this.emit('hasAttribute', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(\n            this.elemProto,\n            'removeAttribute',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name }, target, that);\n                this.emit('removeAttribute', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n    }\n    overrideAudio() {\n        this.ctx.override(\n            this.window,\n            'Audio',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n                let [url] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ url }, target, that);\n                this.emit('audio', event);\n\n                if (event.intercepted) return event.returnValue;\n                return new event.target(event.data.url);\n            },\n            true\n        );\n    }\n    overrideHtml() {\n        this.hookProperty(this.Element, 'innerHTML', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getInnerHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ value: val }, target, that);\n                this.emit('setInnerHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                target.call(that, event.data.value);\n            },\n        });\n        this.hookProperty(this.Element, 'outerHTML', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getOuterHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ value: val }, target, that);\n                this.emit('setOuterHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                target.call(that, event.data.value);\n            },\n        });\n    }\n    overrideInsertAdjacentHTML() {\n        this.ctx.override(\n            this.elemProto,\n            'insertAdjacentHTML',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [position, html] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ position, html }, target, that);\n                this.emit('insertAdjacentHTML', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.position,\n                    event.data.html\n                );\n            }\n        );\n    }\n    overrideInsertAdjacentText() {\n        this.ctx.override(\n            this.elemProto,\n            'insertAdjacentText',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [position, text] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ position, text }, target, that);\n                this.emit('insertAdjacentText', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.position,\n                    event.data.text\n                );\n            }\n        );\n    }\n    hookProperty(element, prop, handler) {\n        // if (!element || !(prop in element)) return false;\n        if (!element) return false;\n\n        if (this.ctx.nativeMethods.isArray(element)) {\n            for (const elem of element) {\n                this.hookProperty(elem, prop, handler);\n            }\n            return true;\n        }\n\n        const proto = element.prototype;\n\n        this.ctx.overrideDescriptor(proto, prop, handler);\n\n        return true;\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ElementApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/dom/element.js?");

/***/ }),

/***/ "./src/client/dom/node.js":
/*!********************************!*\
  !*** ./src/client/dom/node.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass NodeApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Node = ctx.window.Node || {};\n        this.nodeProto = this.Node.prototype || {};\n        this.compareDocumentPosition = this.nodeProto.compareDocumentPosition;\n        this.contains = this.nodeProto.contains;\n        this.insertBefore = this.nodeProto.insertBefore;\n        this.replaceChild = this.nodeProto.replaceChild;\n        this.append = this.nodeProto.append;\n        this.appendChild = this.nodeProto.appendChild;\n        this.removeChild = this.nodeProto.removeChild;\n\n        this.textContent = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'textContent'\n        );\n        this.parentNode = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'parentNode'\n        );\n        this.parentElement = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'parentElement'\n        );\n        this.childNodes = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'childNodes'\n        );\n        this.baseURI = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'baseURI'\n        );\n        this.previousSibling = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'previousSibling'\n        );\n        this.ownerDocument = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.nodeProto,\n            'ownerDocument'\n        );\n    }\n    overrideTextContent() {\n        this.ctx.overrideDescriptor(this.nodeProto, 'textContent', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getTextContent', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ value: val }, target, that);\n                this.emit('setTextContent', event);\n\n                if (event.intercepted) return event.returnValue;\n                target.call(that, event.data.value);\n            },\n        });\n    }\n    overrideAppend() {\n        this.ctx.override(\n            this.nodeProto,\n            'append',\n            (target, that, [...nodes]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ nodes }, target, that);\n                this.emit('append', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.nodes);\n            }\n        );\n        this.ctx.override(\n            this.nodeProto,\n            'appendChild',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [node] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ node }, target, that);\n                this.emit('appendChild', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.node);\n            }\n        );\n    }\n    overrideBaseURI() {\n        this.ctx.overrideDescriptor(this.nodeProto, 'baseURI', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('baseURI', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideParent() {\n        this.ctx.overrideDescriptor(this.nodeProto, 'parentNode', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { node: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('parentNode', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.node;\n            },\n        });\n        this.ctx.overrideDescriptor(this.nodeProto, 'parentElement', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { element: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('parentElement', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.node;\n            },\n        });\n    }\n    overrideOwnerDocument() {\n        this.ctx.overrideDescriptor(this.nodeProto, 'ownerDocument', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { document: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('ownerDocument', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.document;\n            },\n        });\n    }\n    overrideCompareDocumentPosit1ion() {\n        this.ctx.override(\n            this.nodeProto,\n            'compareDocumentPosition',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [node] = args;\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ node }, target, that);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.node);\n            }\n        );\n    }\n    overrideChildMethods() {\n        this.ctx.override(this.nodeProto, 'removeChild');\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NodeApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/dom/node.js?");

/***/ }),

/***/ "./src/client/dom/style.js":
/*!*********************************!*\
  !*** ./src/client/dom/style.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass StyleApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.CSSStyleDeclaration = this.window.CSSStyleDeclaration || {};\n        this.cssStyleProto = this.CSSStyleDeclaration.prototype || {};\n        this.getPropertyValue = this.cssStyleProto.getPropertyValue || null;\n        this.setProperty = this.cssStyleProto.setProperty || null;\n        this.cssText -\n            ctx.nativeMethods.getOwnPropertyDescriptors(\n                this.cssStyleProto,\n                'cssText'\n            );\n        this.urlProps = [\n            'background',\n            'backgroundImage',\n            'borderImage',\n            'borderImageSource',\n            'listStyle',\n            'listStyleImage',\n            'cursor',\n        ];\n        this.dashedUrlProps = [\n            'background',\n            'background-image',\n            'border-image',\n            'border-image-source',\n            'list-style',\n            'list-style-image',\n            'cursor',\n        ];\n        this.propToDashed = {\n            background: 'background',\n            backgroundImage: 'background-image',\n            borderImage: 'border-image',\n            borderImageSource: 'border-image-source',\n            listStyle: 'list-style',\n            listStyleImage: 'list-style-image',\n            cursor: 'cursor',\n        };\n    }\n    overrideSetGetProperty() {\n        this.ctx.override(\n            this.cssStyleProto,\n            'getPropertyValue',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n\n                let [property] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ property }, target, that);\n                this.emit('getPropertyValue', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.property);\n            }\n        );\n        this.ctx.override(\n            this.cssStyleProto,\n            'setProperty',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [property, value] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ property, value }, target, that);\n                this.emit('setProperty', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.property,\n                    event.data.value\n                );\n            }\n        );\n    }\n    overrideCssText() {\n        this.ctx.overrideDescriptor(this.cssStyleProto, 'cssText', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('getCssText', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n            set: (target, that, [val]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ value: val }, target, that);\n                this.emit('setCssText', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.value);\n            },\n        });\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StyleApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/dom/style.js?");

/***/ }),

/***/ "./src/client/history.js":
/*!*******************************!*\
  !*** ./src/client/history.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass History extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = this.ctx.window;\n        this.History = this.window.History;\n        this.history = this.window.history;\n        this.historyProto = this.History ? this.History.prototype : {};\n        this.pushState = this.historyProto.pushState;\n        this.replaceState = this.historyProto.replaceState;\n        this.go = this.historyProto.go;\n        this.back = this.historyProto.back;\n        this.forward = this.historyProto.forward;\n    }\n    override() {\n        this.overridePushState();\n        this.overrideReplaceState();\n        this.overrideGo();\n        this.overrideForward();\n        this.overrideBack();\n    }\n    overridePushState() {\n        this.ctx.override(\n            this.historyProto,\n            'pushState',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [state, title, url = ''] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { state, title, url },\n                    target,\n                    that\n                );\n                this.emit('pushState', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.state,\n                    event.data.title,\n                    event.data.url\n                );\n            }\n        );\n    }\n    overrideReplaceState() {\n        this.ctx.override(\n            this.historyProto,\n            'replaceState',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n                let [state, title, url = ''] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { state, title, url },\n                    target,\n                    that\n                );\n                this.emit('replaceState', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.state,\n                    event.data.title,\n                    event.data.url\n                );\n            }\n        );\n    }\n    overrideGo() {\n        this.ctx.override(this.historyProto, 'go', (target, that, [delta]) => {\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ delta }, target, that);\n            this.emit('go', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.delta);\n        });\n    }\n    overrideForward() {\n        this.ctx.override(this.historyProto, 'forward', (target, that) => {\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](null, target, that);\n            this.emit('forward', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that);\n        });\n    }\n    overrideBack() {\n        this.ctx.override(this.historyProto, 'back', (target, that) => {\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](null, target, that);\n            this.emit('back', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that);\n        });\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (History);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/history.js?");

/***/ }),

/***/ "./src/client/hook.js":
/*!****************************!*\
  !*** ./src/client/hook.js ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass HookEvent {\n    #intercepted;\n    #returnValue;\n    constructor(data = {}, target = null, that = null) {\n        this.#intercepted = false;\n        this.#returnValue = null;\n        this.data = data;\n        this.target = target;\n        this.that = that;\n    }\n    get intercepted() {\n        return this.#intercepted;\n    }\n    get returnValue() {\n        return this.#returnValue;\n    }\n    respondWith(input) {\n        this.#returnValue = input;\n        this.#intercepted = true;\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (HookEvent);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/hook.js?");

/***/ }),

/***/ "./src/client/index.js":
/*!*****************************!*\
  !*** ./src/client/index.js ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _dom_document_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom/document.js */ \"./src/client/dom/document.js\");\n/* harmony import */ var _dom_element_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom/element.js */ \"./src/client/dom/element.js\");\n/* harmony import */ var _dom_node_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom/node.js */ \"./src/client/dom/node.js\");\n/* harmony import */ var _dom_attr_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dom/attr.js */ \"./src/client/dom/attr.js\");\n/* harmony import */ var _native_function_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./native/function.js */ \"./src/client/native/function.js\");\n/* harmony import */ var _native_object_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./native/object.js */ \"./src/client/native/object.js\");\n/* harmony import */ var _requests_fetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./requests/fetch.js */ \"./src/client/requests/fetch.js\");\n/* harmony import */ var _requests_xhr_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./requests/xhr.js */ \"./src/client/requests/xhr.js\");\n/* harmony import */ var _requests_eventsource_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./requests/eventsource.js */ \"./src/client/requests/eventsource.js\");\n/* harmony import */ var _history_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./history.js */ \"./src/client/history.js\");\n/* harmony import */ var _location_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./location.js */ \"./src/client/location.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./message.js */ \"./src/client/message.js\");\n/* harmony import */ var _navigator_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./navigator.js */ \"./src/client/navigator.js\");\n/* harmony import */ var _worker_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./worker.js */ \"./src/client/worker.js\");\n/* harmony import */ var _url_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./url.js */ \"./src/client/url.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _storage_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./storage.js */ \"./src/client/storage.js\");\n/* harmony import */ var _dom_style_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./dom/style.js */ \"./src/client/dom/style.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass UVClient extends events__WEBPACK_IMPORTED_MODULE_15__ {\n    constructor(window = self, worker = !window.window) {\n        super();\n        /**\n         * @type {typeof self}\n         */\n        this.window = window;\n        this.nativeMethods = {\n            fnToString: this.window.Function.prototype.toString,\n            defineProperty: this.window.Object.defineProperty,\n            getOwnPropertyDescriptor:\n                this.window.Object.getOwnPropertyDescriptor,\n            getOwnPropertyDescriptors:\n                this.window.Object.getOwnPropertyDescriptors,\n            getOwnPropertyNames: this.window.Object.getOwnPropertyNames,\n            keys: this.window.Object.keys,\n            getOwnPropertySymbols: this.window.Object.getOwnPropertySymbols,\n            isArray: this.window.Array.isArray,\n            setPrototypeOf: this.window.Object.setPrototypeOf,\n            isExtensible: this.window.Object.isExtensible,\n            Map: this.window.Map,\n            Proxy: this.window.Proxy,\n        };\n        this.worker = worker;\n        this.fetch = new _requests_fetch_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this);\n        this.xhr = new _requests_xhr_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"](this);\n        this.history = new _history_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"](this);\n        this.element = new _dom_element_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this);\n        this.node = new _dom_node_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this);\n        this.document = new _dom_document_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\n        this.function = new _native_function_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"](this);\n        this.object = new _native_object_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\n        this.message = new _message_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"](this);\n        this.navigator = new _navigator_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"](this);\n        this.eventSource = new _requests_eventsource_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"](this);\n        this.attribute = new _dom_attr_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"](this);\n        this.url = new _url_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"](this);\n        this.workers = new _worker_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"](this);\n        this.location = new _location_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](this);\n        this.storage = new _storage_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"](this);\n        this.style = new _dom_style_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"](this);\n    }\n    initLocation(rewriteUrl, sourceUrl) {\n        this.location = new _location_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"](\n            this,\n            sourceUrl,\n            rewriteUrl,\n            this.worker\n        );\n    }\n    override(obj, prop, wrapper, construct) {\n        // if (!(prop in obj)) return false;\n        const wrapped = this.wrap(obj, prop, wrapper, construct);\n        return (obj[prop] = wrapped);\n    }\n    overrideDescriptor(obj, prop, wrapObj = {}) {\n        const wrapped = this.wrapDescriptor(obj, prop, wrapObj);\n        if (!wrapped) return {};\n        this.nativeMethods.defineProperty(obj, prop, wrapped);\n        return wrapped;\n    }\n    wrap(obj, prop, wrap, construct) {\n        const fn = obj[prop];\n        if (!fn) return fn;\n        const wrapped =\n            'prototype' in fn\n                ? function attach() {\n                      return wrap(fn, this, [...arguments]);\n                  }\n                : {\n                      attach() {\n                          return wrap(fn, this, [...arguments]);\n                      },\n                  }.attach;\n\n        if (construct) {\n            wrapped.prototype = fn.prototype;\n            wrapped.prototype.constructor = wrapped;\n        }\n\n        this.emit('wrap', fn, wrapped, !!construct);\n\n        return wrapped;\n    }\n    wrapDescriptor(obj, prop, wrapObj = {}) {\n        const descriptor = this.nativeMethods.getOwnPropertyDescriptor(\n            obj,\n            prop\n        );\n        if (!descriptor) return false;\n        for (let key in wrapObj) {\n            if (key in descriptor) {\n                if (key === 'get' || key === 'set') {\n                    descriptor[key] = this.wrap(descriptor, key, wrapObj[key]);\n                } else {\n                    descriptor[key] =\n                        typeof wrapObj[key] == 'function'\n                            ? wrapObj[key](descriptor[key])\n                            : wrapObj[key];\n                }\n            }\n        }\n        return descriptor;\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UVClient);\nif (typeof self === 'object') self.UVClient = UVClient;\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/index.js?");

/***/ }),

/***/ "./src/client/location.js":
/*!********************************!*\
  !*** ./src/client/location.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass LocationApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.location = this.window.location;\n        this.WorkerLocation = this.ctx.worker\n            ? this.window.WorkerLocation\n            : null;\n        this.workerLocProto = this.WorkerLocation\n            ? this.WorkerLocation.prototype\n            : {};\n        this.keys = [\n            'href',\n            'protocol',\n            'host',\n            'hostname',\n            'port',\n            'pathname',\n            'search',\n            'hash',\n            'origin',\n        ];\n        this.HashChangeEvent = this.window.HashChangeEvent || null;\n        this.href = this.WorkerLocation\n            ? ctx.nativeMethods.getOwnPropertyDescriptor(\n                  this.workerLocProto,\n                  'href'\n              )\n            : ctx.nativeMethods.getOwnPropertyDescriptor(this.location, 'href');\n    }\n    overrideWorkerLocation(parse) {\n        if (!this.WorkerLocation) return false;\n        const uv = this;\n\n        for (const key of this.keys) {\n            this.ctx.overrideDescriptor(this.workerLocProto, key, {\n                get: () => {\n                    return parse(uv.href.get.call(this.location))[key];\n                },\n            });\n        }\n\n        return true;\n    }\n    emulate(parse, wrap) {\n        const emulation = {};\n        const that = this;\n\n        for (const key of that.keys) {\n            this.ctx.nativeMethods.defineProperty(emulation, key, {\n                get() {\n                    return parse(that.href.get.call(that.location))[key];\n                },\n                set:\n                    key !== 'origin'\n                        ? function (val) {\n                              switch (key) {\n                                  case 'href':\n                                      that.location.href = wrap(val);\n                                      break;\n                                  case 'hash':\n                                      that.emit(\n                                          'hashchange',\n                                          emulation.href,\n                                          val.trim().startsWith('#')\n                                              ? new URL(\n                                                    val.trim(),\n                                                    emulation.href\n                                                ).href\n                                              : new URL(\n                                                    '#' + val.trim(),\n                                                    emulation.href\n                                                ).href,\n                                          that\n                                      );\n                                      break;\n                                  default:\n                                      {\n                                          const url = new URL(emulation.href);\n                                          url[key] = val;\n                                          that.location.href = wrap(url.href);\n                                      }\n                                      break;\n                              }\n                          }\n                        : undefined,\n                configurable: false,\n                enumerable: true,\n            });\n        }\n\n        if ('reload' in this.location) {\n            this.ctx.nativeMethods.defineProperty(emulation, 'reload', {\n                value: this.ctx.wrap(\n                    this.location,\n                    'reload',\n                    (target, that) => {\n                        return target.call(\n                            that === emulation ? this.location : that\n                        );\n                    }\n                ),\n                writable: false,\n                enumerable: true,\n            });\n        }\n\n        if ('replace' in this.location) {\n            this.ctx.nativeMethods.defineProperty(emulation, 'replace', {\n                value: this.ctx.wrap(\n                    this.location,\n                    'assign',\n                    (target, that, args) => {\n                        if (!args.length || that !== emulation)\n                            target.call(that);\n                        that = this.location;\n                        let [input] = args;\n\n                        const url = new URL(input, emulation.href);\n                        return target.call(\n                            that === emulation ? this.location : that,\n                            wrap(url.href)\n                        );\n                    }\n                ),\n                writable: false,\n                enumerable: true,\n            });\n        }\n\n        if ('assign' in this.location) {\n            this.ctx.nativeMethods.defineProperty(emulation, 'assign', {\n                value: this.ctx.wrap(\n                    this.location,\n                    'assign',\n                    (target, that, args) => {\n                        if (!args.length || that !== emulation)\n                            target.call(that);\n                        that = this.location;\n                        let [input] = args;\n\n                        const url = new URL(input, emulation.href);\n                        return target.call(\n                            that === emulation ? this.location : that,\n                            wrap(url.href)\n                        );\n                    }\n                ),\n                writable: false,\n                enumerable: true,\n            });\n        }\n\n        if ('ancestorOrigins' in this.location) {\n            this.ctx.nativeMethods.defineProperty(\n                emulation,\n                'ancestorOrigins',\n                {\n                    get() {\n                        const arr = [];\n                        if (that.window.DOMStringList)\n                            that.ctx.nativeMethods.setPrototypeOf(\n                                arr,\n                                that.window.DOMStringList.prototype\n                            );\n                        return arr;\n                    },\n                    set: undefined,\n                    enumerable: true,\n                }\n            );\n        }\n\n        this.ctx.nativeMethods.defineProperty(emulation, 'toString', {\n            value: this.ctx.wrap(this.location, 'toString', () => {\n                return emulation.href;\n            }),\n            enumerable: true,\n            writable: false,\n        });\n\n        this.ctx.nativeMethods.defineProperty(emulation, Symbol.toPrimitive, {\n            value: () => emulation.href,\n            writable: false,\n            enumerable: false,\n        });\n\n        if (this.ctx.window.Location)\n            this.ctx.nativeMethods.setPrototypeOf(\n                emulation,\n                this.ctx.window.Location.prototype\n            );\n\n        return emulation;\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LocationApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/location.js?");

/***/ }),

/***/ "./src/client/message.js":
/*!*******************************!*\
  !*** ./src/client/message.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('./index').default} Ultraviolet\n */\n\nclass MessageApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {Ultraviolet} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = this.ctx.window;\n        this.postMessage = this.window.postMessage;\n        this.MessageEvent = this.window.MessageEvent || {};\n        this.MessagePort = this.window.MessagePort || {};\n        this.mpProto = this.MessagePort.prototype || {};\n        this.mpPostMessage = this.mpProto.postMessage;\n        this.messageProto = this.MessageEvent.prototype || {};\n        this.messageData = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.messageProto,\n            'data'\n        );\n        this.messageOrigin = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.messageProto,\n            'origin'\n        );\n    }\n    overridePostMessage() {\n        this.ctx.override(this.window, 'postMessage', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n\n            let message;\n            let origin;\n            let transfer;\n\n            if (!this.ctx.worker) {\n                [message, origin, transfer = []] = args;\n            } else {\n                [message, transfer = []] = args;\n            }\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                { message, origin, transfer, worker: this.ctx.worker },\n                target,\n                that\n            );\n            this.emit('postMessage', event);\n\n            if (event.intercepted) return event.returnValue;\n            return this.ctx.worker\n                ? event.target.call(\n                      event.that,\n                      event.data.message,\n                      event.data.transfer\n                  )\n                : event.target.call(\n                      event.that,\n                      event.data.message,\n                      event.data.origin,\n                      event.data.transfer\n                  );\n        });\n    }\n    wrapPostMessage(obj, prop, noOrigin = false) {\n        return this.ctx.wrap(obj, prop, (target, that, args) => {\n            if (this.ctx.worker ? !args.length : 2 > args)\n                return target.apply(that, args);\n            let message;\n            let origin;\n            let transfer;\n\n            if (!noOrigin) {\n                [message, origin, transfer = []] = args;\n            } else {\n                [message, transfer = []] = args;\n                origin = null;\n            }\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                { message, origin, transfer, worker: this.ctx.worker },\n                target,\n                obj\n            );\n            this.emit('postMessage', event);\n\n            if (event.intercepted) return event.returnValue;\n            return noOrigin\n                ? event.target.call(\n                      event.that,\n                      event.data.message,\n                      event.data.transfer\n                  )\n                : event.target.call(\n                      event.that,\n                      event.data.message,\n                      event.data.origin,\n                      event.data.transfer\n                  );\n        });\n    }\n    overrideMessageOrigin() {\n        this.ctx.overrideDescriptor(this.messageProto, 'origin', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('origin', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideMessageData() {\n        this.ctx.overrideDescriptor(this.messageProto, 'data', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('data', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MessageApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/message.js?");

/***/ }),

/***/ "./src/client/native/function.js":
/*!***************************************!*\
  !*** ./src/client/native/function.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass FunctionHook extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Function = this.window.Function;\n        this.fnProto = this.Function.prototype;\n        this.toString = this.fnProto.toString;\n        this.fnStrings = ctx.fnStrings;\n        this.call = this.fnProto.call;\n        this.apply = this.fnProto.apply;\n        this.bind = this.fnProto.bind;\n    }\n    overrideFunction() {\n        this.ctx.override(\n            this.window,\n            'Function',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n\n                let script = args[args.length - 1];\n                let fnArgs = [];\n\n                for (let i = 0; i < args.length - 1; i++) {\n                    fnArgs.push(args[i]);\n                }\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { script, args: fnArgs },\n                    target,\n                    that\n                );\n                this.emit('function', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    ...event.data.args,\n                    event.data.script\n                );\n            },\n            true\n        );\n    }\n    overrideToString() {\n        this.ctx.override(this.fnProto, 'toString', (target, that) => {\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ fn: that }, target, that);\n            this.emit('toString', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.data.fn);\n        });\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (FunctionHook);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/native/function.js?");

/***/ }),

/***/ "./src/client/native/object.js":
/*!*************************************!*\
  !*** ./src/client/native/object.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass ObjectHook extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Object = this.window.Object;\n        this.getOwnPropertyDescriptors = this.Object.getOwnPropertyDescriptors;\n        this.getOwnPropertyDescriptor = this.Object.getOwnPropertyDescriptor;\n        this.getOwnPropertyNames = this.Object.getOwnPropertyNames;\n    }\n    overrideGetPropertyNames() {\n        this.ctx.override(\n            this.Object,\n            'getOwnPropertyNames',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [object] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { names: target.call(that, object) },\n                    target,\n                    that\n                );\n                this.emit('getOwnPropertyNames', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.names;\n            }\n        );\n    }\n    overrideGetOwnPropertyDescriptors() {\n        this.ctx.override(\n            this.Object,\n            'getOwnPropertyDescriptors',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [object] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { descriptors: target.call(that, object) },\n                    target,\n                    that\n                );\n                this.emit('getOwnPropertyDescriptors', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.descriptors;\n            }\n        );\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ObjectHook);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/native/object.js?");

/***/ }),

/***/ "./src/client/navigator.js":
/*!*********************************!*\
  !*** ./src/client/navigator.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass NavigatorApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.navigator = this.window.navigator;\n        this.Navigator = this.window.Navigator || {};\n        this.navProto = this.Navigator.prototype || {};\n        this.sendBeacon = this.navProto.sendBeacon;\n    }\n    overrideSendBeacon() {\n        this.ctx.override(this.navProto, 'sendBeacon', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [url, data = ''] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ url, data }, target, that);\n            this.emit('sendBeacon', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(\n                event.that,\n                event.data.url,\n                event.data.data\n            );\n        });\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NavigatorApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/navigator.js?");

/***/ }),

/***/ "./src/client/requests/eventsource.js":
/*!********************************************!*\
  !*** ./src/client/requests/eventsource.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass EventSourceApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.EventSource = this.window.EventSource || {};\n        this.esProto = this.EventSource.prototype || {};\n        this.url = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.esProto,\n            'url'\n        );\n        this.CONNECTING = 0;\n        this.OPEN = 1;\n        this.CLOSED = 2;\n    }\n    overrideConstruct() {\n        this.ctx.override(\n            this.window,\n            'EventSource',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n                let [url, config = {}] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ url, config }, target, that);\n                this.emit('construct', event);\n\n                if (event.intercepted) return event.returnValue;\n                return new event.target(event.data.url, event.data.config);\n            },\n            true\n        );\n\n        if ('EventSource' in this.window) {\n            this.window.EventSource.CONNECTING = this.CONNECTING;\n            this.window.EventSource.OPEN = this.OPEN;\n            this.window.EventSource.CLOSED = this.CLOSED;\n        }\n    }\n    overrideUrl() {\n        this.ctx.overrideDescriptor(this.esProto, 'url', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('url', event);\n                return event.data.value;\n            },\n        });\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EventSourceApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/requests/eventsource.js?");

/***/ }),

/***/ "./src/client/requests/fetch.js":
/*!**************************************!*\
  !*** ./src/client/requests/fetch.js ***!
  \**************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass Fetch extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.fetch = this.window.fetch;\n        this.Request = this.window.Request;\n        this.Response = this.window.Response;\n        this.Headers = this.window.Headers;\n        this.reqProto = this.Request ? this.Request.prototype : {};\n        this.resProto = this.Response ? this.Response.prototype : {};\n        this.headersProto = this.Headers ? this.Headers.prototype : {};\n        this.reqUrl = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.reqProto,\n            'url'\n        );\n        this.resUrl = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.resProto,\n            'url'\n        );\n        this.reqHeaders = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.reqProto,\n            'headers'\n        );\n        this.resHeaders = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.resProto,\n            'headers'\n        );\n    }\n    override() {\n        this.overrideRequest();\n        this.overrideUrl();\n        this.overrideHeaders();\n        return true;\n    }\n    overrideRequest() {\n        if (!this.fetch) return false;\n\n        this.ctx.override(this.window, 'fetch', (target, that, args) => {\n            if (!args.length || args[0] instanceof this.Request)\n                return target.apply(that, args);\n\n            let [input, options = {}] = args;\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ input, options }, target, that);\n\n            this.emit('request', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(\n                event.that,\n                event.data.input,\n                event.data.options\n            );\n        });\n\n        this.ctx.override(\n            this.window,\n            'Request',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n\n                let [input, options = {}] = args;\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ input, options }, target);\n\n                this.emit('request', event);\n                if (event.intercepted) return event.returnValue;\n\n                return new event.target(event.data.input, event.data.options);\n            },\n            true\n        );\n        return true;\n    }\n    overrideUrl() {\n        this.ctx.overrideDescriptor(this.reqProto, 'url', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('requestUrl', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            },\n        });\n\n        this.ctx.overrideDescriptor(this.resProto, 'url', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('responseUrl', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            },\n        });\n        return true;\n    }\n    overrideHeaders() {\n        if (!this.Headers) return false;\n\n        this.ctx.overrideDescriptor(this.reqProto, 'headers', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('requestHeaders', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            },\n        });\n\n        this.ctx.overrideDescriptor(this.resProto, 'headers', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('responseHeaders', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            },\n        });\n\n        this.ctx.override(this.headersProto, 'get', (target, that, [name]) => {\n            if (!name) return target.call(that);\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                { name, value: target.call(that, name) },\n                target,\n                that\n            );\n\n            this.emit('getHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.data.value;\n        });\n\n        this.ctx.override(this.headersProto, 'set', (target, that, args) => {\n            if (2 > args.length) return target.apply(that, args);\n\n            let [name, value] = args;\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name, value }, target, that);\n\n            this.emit('setHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(\n                event.that,\n                event.data.name,\n                event.data.value\n            );\n        });\n\n        this.ctx.override(this.headersProto, 'has', (target, that, args) => {\n            if (!args.length) return target.call(that);\n            let [name] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                { name, value: target.call(that, name) },\n                target,\n                that\n            );\n\n            this.emit('hasHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.data;\n        });\n\n        this.ctx.override(this.headersProto, 'append', (target, that, args) => {\n            if (2 > args.length) return target.apply(that, args);\n\n            let [name, value] = args;\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name, value }, target, that);\n\n            this.emit('appendHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(\n                event.that,\n                event.data.name,\n                event.data.value\n            );\n        });\n\n        this.ctx.override(this.headersProto, 'delete', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n\n            let [name] = args;\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name }, target, that);\n\n            this.emit('deleteHeader', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(event.that, event.data.name);\n        });\n\n        return true;\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Fetch);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/requests/fetch.js?");

/***/ }),

/***/ "./src/client/requests/xhr.js":
/*!************************************!*\
  !*** ./src/client/requests/xhr.js ***!
  \************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('../index').default} UVClient\n */\n\nclass Xhr extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.XMLHttpRequest = this.window.XMLHttpRequest;\n        this.xhrProto = this.window.XMLHttpRequest\n            ? this.window.XMLHttpRequest.prototype\n            : {};\n        this.open = this.xhrProto.open;\n        this.abort = this.xhrProto.abort;\n        this.send = this.xhrProto.send;\n        this.overrideMimeType = this.xhrProto.overrideMimeType;\n        this.getAllResponseHeaders = this.xhrProto.getAllResponseHeaders;\n        this.getResponseHeader = this.xhrProto.getResponseHeader;\n        this.setRequestHeader = this.xhrProto.setRequestHeader;\n        this.responseURL = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.xhrProto,\n            'responseURL'\n        );\n        this.responseText = ctx.nativeMethods.getOwnPropertyDescriptor(\n            this.xhrProto,\n            'responseText'\n        );\n    }\n    override() {\n        this.overrideOpen();\n        this.overrideSend();\n        this.overrideMimeType();\n        this.overrideGetResHeader();\n        this.overrideGetResHeaders();\n        this.overrideSetReqHeader();\n    }\n    overrideOpen() {\n        this.ctx.override(this.xhrProto, 'open', (target, that, args) => {\n            if (2 > args.length) return target.apply(that, args);\n\n            let [method, input, async = true, user = null, password = null] =\n                args;\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                { method, input, async, user, password },\n                target,\n                that\n            );\n\n            this.emit('open', event);\n            if (event.intercepted) return event.returnValue;\n\n            return event.target.call(\n                event.that,\n                event.data.method,\n                event.data.input,\n                event.data.async,\n                event.data.user,\n                event.data.password\n            );\n        });\n    }\n    overrideResponseUrl() {\n        this.ctx.overrideDescriptor(this.xhrProto, 'responseURL', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n                this.emit('responseUrl', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.value;\n            },\n        });\n    }\n    overrideSend() {\n        this.ctx.override(\n            this.xhrProto,\n            'send',\n            (target, that, [body = null]) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ body }, target, that);\n\n                this.emit('send', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.target.call(event.that, event.data.body);\n            }\n        );\n    }\n    overrideSetReqHeader() {\n        this.ctx.override(\n            this.xhrProto,\n            'setRequestHeader',\n            (target, that, args) => {\n                if (2 > args.length) return target.apply(that, args);\n\n                let [name, value] = args;\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name, value }, target, that);\n\n                this.emit('setReqHeader', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.target.call(\n                    event.that,\n                    event.data.name,\n                    event.data.value\n                );\n            }\n        );\n    }\n    overrideGetResHeaders() {\n        this.ctx.override(\n            this.xhrProto,\n            'getAllResponseHeaders',\n            (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { value: target.call(that) },\n                    target,\n                    that\n                );\n\n                this.emit('getAllResponseHeaders', event);\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            }\n        );\n    }\n    overrideGetResHeader() {\n        this.ctx.override(\n            this.xhrProto,\n            'getResponseHeader',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [name] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { name, value: target.call(that, name) },\n                    target,\n                    that\n                );\n                if (event.intercepted) return event.returnValue;\n\n                return event.data.value;\n            }\n        );\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Xhr);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/requests/xhr.js?");

/***/ }),

/***/ "./src/client/storage.js":
/*!*******************************!*\
  !*** ./src/client/storage.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass StorageApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.localStorage = this.window.localStorage || null;\n        this.sessionStorage = this.window.sessionStorage || null;\n        this.Storage = this.window.Storage || {};\n        this.storeProto = this.Storage.prototype || {};\n        this.getItem = this.storeProto.getItem || null;\n        this.setItem = this.storeProto.setItem || null;\n        this.removeItem = this.storeProto.removeItem || null;\n        this.clear = this.storeProto.clear || null;\n        this.key = this.storeProto.key || null;\n        this.methods = ['key', 'getItem', 'setItem', 'removeItem', 'clear'];\n        this.wrappers = new ctx.nativeMethods.Map();\n    }\n    overrideMethods() {\n        this.ctx.override(this.storeProto, 'getItem', (target, that, args) => {\n            if (!args.length)\n                return target.apply(this.wrappers.get(that) || that, args);\n            let [name] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                { name },\n                target,\n                this.wrappers.get(that) || that\n            );\n            this.emit('getItem', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.name);\n        });\n        this.ctx.override(this.storeProto, 'setItem', (target, that, args) => {\n            if (2 > args.length)\n                return target.apply(this.wrappers.get(that) || that, args);\n            let [name, value] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                { name, value },\n                target,\n                this.wrappers.get(that) || that\n            );\n            this.emit('setItem', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(\n                event.that,\n                event.data.name,\n                event.data.value\n            );\n        });\n        this.ctx.override(\n            this.storeProto,\n            'removeItem',\n            (target, that, args) => {\n                if (!args.length)\n                    return target.apply(this.wrappers.get(that) || that, args);\n                let [name] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { name },\n                    target,\n                    this.wrappers.get(that) || that\n                );\n                this.emit('removeItem', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(event.that, event.data.name);\n            }\n        );\n        this.ctx.override(this.storeProto, 'clear', (target, that) => {\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                null,\n                target,\n                this.wrappers.get(that) || that\n            );\n            this.emit('clear', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that);\n        });\n        this.ctx.override(this.storeProto, 'key', (target, that, args) => {\n            if (!args.length)\n                return target.apply(this.wrappers.get(that) || that, args);\n            let [index] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                { index },\n                target,\n                this.wrappers.get(that) || that\n            );\n            this.emit('key', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.index);\n        });\n    }\n    overrideLength() {\n        this.ctx.overrideDescriptor(this.storeProto, 'length', {\n            get: (target, that) => {\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { length: target.call(this.wrappers.get(that) || that) },\n                    target,\n                    this.wrappers.get(that) || that\n                );\n                this.emit('length', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.data.length;\n            },\n        });\n    }\n    emulate(storage, obj = {}) {\n        this.ctx.nativeMethods.setPrototypeOf(obj, this.storeProto);\n\n        const proxy = new this.ctx.window.Proxy(obj, {\n            get: (target, prop) => {\n                if (prop in this.storeProto || typeof prop === 'symbol')\n                    return storage[prop];\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name: prop }, null, storage);\n                this.emit('get', event);\n\n                if (event.intercepted) return event.returnValue;\n                return storage[event.data.name];\n            },\n            set: (target, prop, value) => {\n                if (prop in this.storeProto || typeof prop === 'symbol')\n                    return (storage[prop] = value);\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { name: prop, value },\n                    null,\n                    storage\n                );\n                this.emit('set', event);\n\n                if (event.intercepted) return event.returnValue;\n\n                return (storage[event.data.name] = event.data.value);\n            },\n            deleteProperty: (target, prop) => {\n                if (typeof prop === 'symbol') return delete storage[prop];\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ name: prop }, null, storage);\n                this.emit('delete', event);\n\n                if (event.intercepted) return event.returnValue;\n\n                return delete storage[event.data.name];\n            },\n        });\n\n        this.wrappers.set(proxy, storage);\n        this.ctx.nativeMethods.setPrototypeOf(proxy, this.storeProto);\n\n        return proxy;\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (StorageApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/storage.js?");

/***/ }),

/***/ "./src/client/url.js":
/*!***************************!*\
  !*** ./src/client/url.js ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass URLApi extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = this.ctx.window;\n        this.URL = this.window.URL || {};\n        this.createObjectURL = this.URL.createObjectURL;\n        this.revokeObjectURL = this.URL.revokeObjectURL;\n    }\n    overrideObjectURL() {\n        this.ctx.override(this.URL, 'createObjectURL', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [object] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ object }, target, that);\n            this.emit('createObjectURL', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.object);\n        });\n        this.ctx.override(this.URL, 'revokeObjectURL', (target, that, args) => {\n            if (!args.length) return target.apply(that, args);\n            let [url] = args;\n\n            const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ url }, target, that);\n            this.emit('revokeObjectURL', event);\n\n            if (event.intercepted) return event.returnValue;\n            return event.target.call(event.that, event.data.url);\n        });\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (URLApi);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/url.js?");

/***/ }),

/***/ "./src/client/worker.js":
/*!******************************!*\
  !*** ./src/client/worker.js ***!
  \******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var _hook_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hook.js */ \"./src/client/hook.js\");\n\n\n\n/**\n * @typedef {import('./index').default} UVClient\n */\n\nclass Workers extends events__WEBPACK_IMPORTED_MODULE_0__ {\n    /**\n     *\n     * @param {UVClient} ctx\n     */\n    constructor(ctx) {\n        super();\n        this.ctx = ctx;\n        this.window = ctx.window;\n        this.Worker = this.window.Worker || {};\n        this.Worklet = this.window.Worklet || {};\n        this.workletProto = this.Worklet.prototype || {};\n        this.workerProto = this.Worker.prototype || {};\n        this.postMessage = this.workerProto.postMessage;\n        this.terminate = this.workerProto.terminate;\n        this.addModule = this.workletProto.addModule;\n    }\n    overrideWorker() {\n        this.ctx.override(\n            this.window,\n            'Worker',\n            (target, that, args) => {\n                if (!args.length) return new target(...args);\n                let [url, options = {}] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ url, options }, target, that);\n                this.emit('worker', event);\n\n                if (event.intercepted) return event.returnValue;\n                return new event.target(\n                    ...[event.data.url, event.data.options]\n                );\n            },\n            true\n        );\n    }\n    overrideAddModule() {\n        this.ctx.override(\n            this.workletProto,\n            'addModule',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [url, options = {}] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ url, options }, target, that);\n                this.emit('addModule', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.url,\n                    event.data.options\n                );\n            }\n        );\n    }\n    overridePostMessage() {\n        this.ctx.override(\n            this.workerProto,\n            'postMessage',\n            (target, that, args) => {\n                if (!args.length) return target.apply(that, args);\n                let [message, transfer = []] = args;\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\n                    { message, transfer },\n                    target,\n                    that\n                );\n                this.emit('postMessage', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.call(\n                    event.that,\n                    event.data.message,\n                    event.data.transfer\n                );\n            }\n        );\n    }\n    overrideImportScripts() {\n        this.ctx.override(\n            this.window,\n            'importScripts',\n            (target, that, scripts) => {\n                if (!scripts.length) return target.apply(that, scripts);\n\n                const event = new _hook_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({ scripts }, target, that);\n                this.emit('importScripts', event);\n\n                if (event.intercepted) return event.returnValue;\n                return event.target.apply(event.that, event.data.scripts);\n            }\n        );\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Workers);\n\n\n//# sourceURL=webpack://@titaniumnetwork-dev/ultraviolet/./src/client/worker.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/client/index.js");
/******/ 	
/******/ })()
;